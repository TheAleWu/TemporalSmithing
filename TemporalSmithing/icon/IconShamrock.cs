using System;
using Cairo;

namespace temporalsmithing.icon;

public class IconShamrock {

	public static void Drawshamrock_svg(Context cr, int x, int y, float width, float height, double[] rgba) {
		Pattern pattern;
		Matrix matrix = cr.Matrix;

		cr.Save();
		float w = 512;
		float h = 512;
		float scale = Math.Min(width / w, height / h);
		matrix.Translate(x + Math.Max(0, (width - w * scale) / 2), y + Math.Max(0, (height - h * scale) / 2));
		matrix.Scale(scale, scale);
		cr.Matrix = matrix;

		cr.Operator = Operator.Over;
		pattern = new SolidPattern(rgba[0], rgba[1], rgba[2], rgba[3]);
		cr.SetSource(pattern);

		cr.NewPath();
		cr.MoveTo(229.300781, 23.601563);
		cr.CurveTo(228, 23.601563, 226.601563, 24.601563, 225.300781, 23.488281);
		cr.CurveTo(204.101563, 24.519531, 184.601563, 32, 175.601563, 42.03125);
		cr.CurveTo(164.398438, 54.539063, 159, 88.171875, 172.398438, 124.480469);
		cr.CurveTo(184.800781, 158.078125, 211.898438, 193.878906, 260.5, 218.78125);
		cr.CurveTo(274, 181.480469, 277.898438, 118.480469, 277.101563, 70.21875);
		cr.LineTo(295.101563, 69.941406);
		cr.CurveTo(294.398438, 116.578125, 293.199219, 175.878906, 279.898438, 217.878906);
		cr.CurveTo(314.101563, 201.378906, 344.699219, 184.980469, 366.300781, 163.179688);
		cr.CurveTo(391, 138.28125, 405.199219, 106.679688, 402.199219, 56.148438);
		cr.CurveTo(402, 52.300781, 399.199219, 47.429688, 392.800781, 42.578125);
		cr.CurveTo(386.5, 37.730469, 376.898438, 33.339844, 365.800781, 30.648438);
		cr.CurveTo(343.699219, 25.28125, 315.699219, 26.679688, 293.601563, 39.410156);
		cr.LineTo(288.398438, 42.378906);
		cr.LineTo(283.699219, 38.789063);
		cr.CurveTo(270.800781, 29.058594, 252, 23.859375, 233.300781, 23.398438);
		cr.LineTo(229.300781, 23.398438);
		cr.ClosePath();
		cr.MoveTo(89.179688, 161.300781);
		cr.CurveTo(86.46875, 161.300781, 83.761719, 162.300781, 81.039063, 164.300781);
		cr.CurveTo(60.691406, 165.898438, 36.980469, 181.101563, 28.050781, 203.398438);
		cr.CurveTo(19.121094, 225.699219, 22.71875, 255.800781, 60.371094, 291.601563);
		cr.LineTo(63.5, 294.601563);
		cr.LineTo(63.140625, 298.898438);
		cr.CurveTo(59.449219, 342.300781, 117.140625, 370.699219, 71.269531, 387.699219);
		cr.CurveTo(78.859375, 404.800781, 88.800781, 411, 100.300781, 413);
		cr.CurveTo(111.699219, 414.898438, 125.300781, 411.699219, 137.101563, 406.101563);
		cr.CurveTo(148.898438, 400.601563, 158.898438, 392.5, 162.300781, 388.101563);
		cr.LineTo(162.300781, 388);
		cr.CurveTo(197.300781, 343.601563, 213.5, 297.898438, 232.300781, 251.199219);
		cr.CurveTo(152.101563, 297.601563, 119.699219, 292.5, 89.421875, 296.898438);
		cr.LineTo(86.839844, 279.101563);
		cr.CurveTo(122.101563, 274, 147.601563, 281.300781, 232.398438, 230.199219);
		cr.CurveTo(187.5, 198.300781, 141.300781, 165, 91.878906, 164);
		cr.ClosePath();
		cr.MoveTo(394, 218.601563);
		cr.CurveTo(390.199219, 219.601563, 386.300781, 222.601563, 382.300781, 226.601563);
		cr.CurveTo(355.101563, 229.398438, 326.199219, 239.398438, 298.101563, 246.101563);
		cr.CurveTo(334.101563, 291.699219, 359, 330.101563, 401.601563, 358.5);
		cr.LineTo(391.601563, 373.5);
		cr.CurveTo(347, 343.699219, 321.101563, 305, 287.398438, 261.898438);
		cr.CurveTo(281, 294.101563, 276.199219, 326.601563, 278.101563, 355.800781);
		cr.CurveTo(280.300781, 390.800781, 291.5, 420.601563, 320.5, 442.5);
		cr.CurveTo(337.300781, 455.199219, 350.898438, 460.5, 361.5, 461.300781);
		cr.CurveTo(372.101563, 469.300781, 380.300781, 458.898438, 388.199219, 452.398438);
		cr.CurveTo(403.800781, 439.398438, 415.800781, 411.898438, 424.601563, 384.699219);
		cr.LineTo(425.800781, 381.101563);
		cr.LineTo(429.300781, 379.398438);
		cr.CurveTo(469.398438, 360, 484.300781, 337.898438, 487.398438, 317.300781);
		cr.CurveTo(490.5, 296.601563, 481.300781, 275.699219, 468, 259.699219);
		cr.CurveTo(446.101563, 233.300781, 422.5, 225.601563, 396.5, 225.800781);
		cr.ClosePath();
		cr.MoveTo(255.601563, 236.199219);
		cr.CurveTo(214.800781, 328, 233.101563, 404.800781, 252.601563, 488.398438);
		cr.LineTo(270.199219, 484.398438);
		cr.CurveTo(250.699219, 400.601563, 233.601563, 330.199219, 272, 243.601563);
		cr.ClosePath();
		cr.MoveTo(255.601563, 236.199219);
		cr.Tolerance = 0.1;
		cr.Antialias = Antialias.Default;
		cr.FillRule = FillRule.Winding;
		cr.FillPreserve();
		pattern.Dispose();

		cr.Restore();
	}

}